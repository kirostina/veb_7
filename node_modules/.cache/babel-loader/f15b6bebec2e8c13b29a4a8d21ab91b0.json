{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/veb_7/src/components/UserTable/UserTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserTable(_ref) {\n  _s();\n\n  let {\n    data,\n    onDeleteRows,\n    onDuplicateRows\n  } = _ref;\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleCheckboxChange = (event, id) => {\n    const isChecked = event.target.checked;\n\n    if (isChecked) {\n      setSelectedRows(prevSelectedRows => [...prevSelectedRows, id]);\n    } else {\n      setSelectedRows(prevSelectedRows => prevSelectedRows.filter(rowId => rowId !== id));\n    }\n  };\n\n  const handleDeleteSelectedRows = () => {\n    onDeleteRows(selectedRows);\n    setSelectedRows([]);\n  };\n\n  const handleDuplicateSelectedRows = () => {\n    onDuplicateRows(selectedRows);\n    setSelectedRows([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"\\u0406\\u043C'\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"\\u041F\\u043E\\u0448\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"\\u0414\\u0456\\u0457\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: e => handleCheckboxChange(e, user.id),\n              checked: selectedRows.includes(user.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteSelectedRows,\n        children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0432\\u0438\\u0431\\u0440\\u0430\\u043D\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDuplicateSelectedRows,\n        children: \"\\u0414\\u0443\\u0431\\u043B\\u044E\\u0432\\u0430\\u0442\\u0438 \\u0432\\u0438\\u0431\\u0440\\u0430\\u043D\\u0456\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserTable, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n\n_c = UserTable;\nexport default UserTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"sources":["/Users/kristina/Desktop/veb_7/src/components/UserTable/UserTable.jsx"],"names":["React","useState","UserTable","data","onDeleteRows","onDuplicateRows","selectedRows","setSelectedRows","handleCheckboxChange","event","id","isChecked","target","checked","prevSelectedRows","filter","rowId","handleDeleteSelectedRows","handleDuplicateSelectedRows","map","user","name","email","phone","gender","e","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction UserTable({ data, onDeleteRows, onDuplicateRows }) {\n  const [selectedRows, setSelectedRows] = useState([]);\n\n  const handleCheckboxChange = (event, id) => {\n    const isChecked = event.target.checked;\n    if (isChecked) {\n      setSelectedRows((prevSelectedRows) => [...prevSelectedRows, id]);\n    } else {\n      setSelectedRows((prevSelectedRows) =>\n        prevSelectedRows.filter((rowId) => rowId !== id)\n      );\n    }\n  };\n\n  const handleDeleteSelectedRows = () => {\n    onDeleteRows(selectedRows);\n    setSelectedRows([]);\n  };\n\n  const handleDuplicateSelectedRows = () => {\n    onDuplicateRows(selectedRows);\n    setSelectedRows([]);\n  };\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <Th>Ім'я</Th>\n            <Th>Пошта</Th>\n            <Th>Номер телефону</Th>\n            <Th>Стать</Th>\n            <Th>Дії</Th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((user) => (\n            <tr key={user.id}>\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              <td>{user.phone}</td>\n              <td>{user.gender}</td>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => handleCheckboxChange(e, user.id)}\n                  checked={selectedRows.includes(user.id)}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <div>\n        <button onClick={handleDeleteSelectedRows}>Видалити вибрані</button>\n        <button onClick={handleDuplicateSelectedRows}>Дублювати вибрані</button>\n      </div>\n    </div>\n  );\n}\n\nexport default UserTable;"]},"metadata":{},"sourceType":"module"}