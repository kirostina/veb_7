{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/veb_7/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RegistrationForm from './RegistrationForm/RegistrationForm';\nimport UserTable from './UserTable/UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n\n  const handleFormSubmit = userData => {\n    setUsers(prevUsers => [...prevUsers, {\n      id: Date.now(),\n      ...userData\n    }]);\n  };\n\n  const handleDeleteRows = rowIds => {\n    setUsers(prevUsers => prevUsers.filter(user => !rowIds.includes(user.id)));\n  };\n\n  const handleDuplicateRows = rowIds => {\n    const newUsers = users.filter(user => rowIds.includes(user.id));\n    const duplicatedUsers = newUsers.map(user => ({ ...user,\n      id: Date.now()\n    }));\n    setUsers(prevUsers => [...prevUsers, ...duplicatedUsers]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegistrationForm, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n      data: users,\n      onDeleteRows: handleDeleteRows,\n      onDuplicateRows: handleDuplicateRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kristina/Desktop/veb_7/src/components/App.jsx"],"names":["React","useState","RegistrationForm","UserTable","App","users","setUsers","handleFormSubmit","userData","prevUsers","id","Date","now","handleDeleteRows","rowIds","filter","user","includes","handleDuplicateRows","newUsers","duplicatedUsers","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,gBAAgB,GAAIC,QAAD,IAAc;AACrCF,IAAAA,QAAQ,CAAEG,SAAD,IAAe,CACtB,GAAGA,SADmB,EAEtB;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkB,SAAGJ;AAArB,KAFsB,CAAhB,CAAR;AAID,GALD;;AAOA,QAAMK,gBAAgB,GAAIC,MAAD,IAAY;AACnCR,IAAAA,QAAQ,CAAEG,SAAD,IACPA,SAAS,CAACM,MAAV,CAAkBC,IAAD,IAAU,CAACF,MAAM,CAACG,QAAP,CAAgBD,IAAI,CAACN,EAArB,CAA5B,CADM,CAAR;AAGD,GAJD;;AAMA,QAAMQ,mBAAmB,GAAIJ,MAAD,IAAY;AACtC,UAAMK,QAAQ,GAAGd,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUF,MAAM,CAACG,QAAP,CAAgBD,IAAI,CAACN,EAArB,CAAvB,CAAjB;AACA,UAAMU,eAAe,GAAGD,QAAQ,CAACE,GAAT,CAAcL,IAAD,KAAW,EAC9C,GAAGA,IAD2C;AAE9CN,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAF0C,KAAX,CAAb,CAAxB;AAIAN,IAAAA,QAAQ,CAAEG,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe,GAAGW,eAAlB,CAAhB,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEF,KADR;AAEE,MAAA,YAAY,EAAEQ,gBAFhB;AAGE,MAAA,eAAe,EAAEK;AAHnB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApCed,G;;KAAAA,G;AAsChB,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport RegistrationForm from './RegistrationForm/RegistrationForm';\nimport UserTable from './UserTable/UserTable';\n\nexport function App() {\n  const [users, setUsers] = useState([]);\n\n  const handleFormSubmit = (userData) => {\n    setUsers((prevUsers) => [\n      ...prevUsers,\n      { id: Date.now(), ...userData },\n    ]);\n  };\n\n  const handleDeleteRows = (rowIds) => {\n    setUsers((prevUsers) =>\n      prevUsers.filter((user) => !rowIds.includes(user.id))\n    );\n  };\n\n  const handleDuplicateRows = (rowIds) => {\n    const newUsers = users.filter((user) => rowIds.includes(user.id));\n    const duplicatedUsers = newUsers.map((user) => ({\n      ...user,\n      id: Date.now(),\n    }));\n    setUsers((prevUsers) => [...prevUsers, ...duplicatedUsers]);\n  };\n\n  return (\n    <div>\n      <h1>Реєстрація користувачів</h1>\n      <RegistrationForm onSubmit={handleFormSubmit} />\n      <UserTable\n        data={users}\n        onDeleteRows={handleDeleteRows}\n        onDuplicateRows={handleDuplicateRows}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}