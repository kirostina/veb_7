{"ast":null,"code":"var _jsxFileName = \"/Users/kristina/Desktop/veb_7/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport RegistrationForm from './RegistrationForm/RegistrationForm';\nimport UserTable from './UserTable/UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = userData => {\n      // Обробка поданих даних та додавання їх до стану\n      this.setState(prevState => ({\n        users: [...prevState.users, {\n          id: Date.now(),\n          ...userData\n        }]\n      }));\n    };\n\n    this.handleDeleteRows = rowIds => {\n      // Видалення вибраних рядків зі стану\n      this.setState(prevState => ({\n        users: prevState.users.filter(user => !rowIds.includes(user.id))\n      }));\n    };\n\n    this.handleDuplicateRows = rowIds => {\n      // Дублювання вибраних рядків та додавання нових рядків до стану\n      this.setState(prevState => {\n        const newUsers = prevState.users.filter(user => rowIds.includes(user.id));\n        const duplicatedUsers = newUsers.map(user => ({ ...user,\n          id: Date.now() // Змініть ідентифікатор, якщо потрібно\n\n        }));\n        return {\n          users: [...prevState.users, ...duplicatedUsers]\n        };\n      });\n    };\n\n    this.state = {\n      users: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0456\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegistrationForm, {\n        onSubmit: this.handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        data: this.state.users,\n        onDeleteRows: this.handleDeleteRows,\n        onDuplicateRows: this.handleDuplicateRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristina/Desktop/veb_7/src/components/App.jsx"],"names":["React","Component","RegistrationForm","UserTable","App","constructor","props","handleFormSubmit","userData","setState","prevState","users","id","Date","now","handleDeleteRows","rowIds","filter","user","includes","handleDuplicateRows","newUsers","duplicatedUsers","map","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,gBAPmB,GAOCC,QAAD,IAAc;AAC/B;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,KAAK,EAAE,CAAC,GAAGD,SAAS,CAACC,KAAd,EAAqB;AAAEC,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkB,aAAGN;AAArB,SAArB;AADqB,OAAhB,CAAd;AAGD,KAZkB;;AAAA,SAcnBO,gBAdmB,GAcCC,MAAD,IAAY;AAC7B;AACA,WAAKP,QAAL,CAAeC,SAAD,KAAgB;AAC5BC,QAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,CAAgBM,MAAhB,CAAwBC,IAAD,IAAU,CAACF,MAAM,CAACG,QAAP,CAAgBD,IAAI,CAACN,EAArB,CAAlC;AADqB,OAAhB,CAAd;AAGD,KAnBkB;;AAAA,SAqBnBQ,mBArBmB,GAqBIJ,MAAD,IAAY;AAChC;AACA,WAAKP,QAAL,CAAeC,SAAD,IAAe;AAC3B,cAAMW,QAAQ,GAAGX,SAAS,CAACC,KAAV,CAAgBM,MAAhB,CAAwBC,IAAD,IAAUF,MAAM,CAACG,QAAP,CAAgBD,IAAI,CAACN,EAArB,CAAjC,CAAjB;AACA,cAAMU,eAAe,GAAGD,QAAQ,CAACE,GAAT,CAAcL,IAAD,KAAW,EAC9C,GAAGA,IAD2C;AAE9CN,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAF0C,CAE9B;;AAF8B,SAAX,CAAb,CAAxB;AAIA,eAAO;AACLH,UAAAA,KAAK,EAAE,CAAC,GAAGD,SAAS,CAACC,KAAd,EAAqB,GAAGW,eAAxB;AADF,SAAP;AAGD,OATD;AAUD,KAjCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXb,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AA8BDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAE,KAAKlB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AACE,QAAA,IAAI,EAAE,KAAKiB,KAAL,CAAWb,KADnB;AAEE,QAAA,YAAY,EAAE,KAAKI,gBAFrB;AAGE,QAAA,eAAe,EAAE,KAAKK;AAHxB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAhDyB;;AAmD5B,eAAehB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport RegistrationForm from './RegistrationForm/RegistrationForm';\nimport UserTable from './UserTable/UserTable';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n  }\n\n  handleFormSubmit = (userData) => {\n    // Обробка поданих даних та додавання їх до стану\n    this.setState((prevState) => ({\n      users: [...prevState.users, { id: Date.now(), ...userData }],\n    }));\n  }\n\n  handleDeleteRows = (rowIds) => {\n    // Видалення вибраних рядків зі стану\n    this.setState((prevState) => ({\n      users: prevState.users.filter((user) => !rowIds.includes(user.id)),\n    }));\n  }\n\n  handleDuplicateRows = (rowIds) => {\n    // Дублювання вибраних рядків та додавання нових рядків до стану\n    this.setState((prevState) => {\n      const newUsers = prevState.users.filter((user) => rowIds.includes(user.id));\n      const duplicatedUsers = newUsers.map((user) => ({\n        ...user,\n        id: Date.now(), // Змініть ідентифікатор, якщо потрібно\n      }));\n      return {\n        users: [...prevState.users, ...duplicatedUsers],\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Реєстрація користувачів</h1>\n        <RegistrationForm onSubmit={this.handleFormSubmit} />\n        <UserTable\n          data={this.state.users}\n          onDeleteRows={this.handleDeleteRows}\n          onDuplicateRows={this.handleDuplicateRows}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}